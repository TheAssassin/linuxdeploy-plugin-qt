language: cpp
sudo: required
# required for Qt 5 wayland packages
dist: xenial

matrix:
  include:
    - env: ARCH=x86_64
      addons:
        apt:
          update: true
          sources:
            - sourceline: 'ppa:beineri/opt-qt-5.12.0-xenial'
          packages:
            - libmagic-dev
            - libjpeg-dev
            - libpng-dev
            - cimg-dev
            - automake  # required for patchelf
            - gcc
            - g++
            # Packages below are only required by the test srcipt
            - qt512-meta-minimal
            - qt512base
            - qt512declarative
            - qt512webengine
            - qt512wayland
            - mesa-common-dev
            - libgl1
    - env: ARCH=i386
      addons:
        apt:
          update: true
          packages:
            - libmagic-dev:i386
            - libjpeg-dev:i386
            - libpng-dev:i386
            - automake  # required for patchelf
            - libfuse2:i386
            - libcairo2:i386
            - gcc-multilib
            - g++-multilib

install:
  - git clone https://github.com/NixOS/patchelf.git -b 0.8
  - cd patchelf
  - ./bootstrap.sh
  - if [ "$ARCH" == "i386" ]; then export EXTRA_CONFIGURE_ARGS=("--build=i686-pc-linux-gnu" "CFLAGS=-m32" "CXXFLAGS=-m32" "LDFLAGS=-m32"); fi
  - ./configure --prefix=/usr "${EXTRA_CONFIGURE_ARGS[@]}"
  - make -j$(nproc)
  - sudo make install
  - cd ..
  - rm -rf patchelf

script:
  - bash -xe travis/build.sh
  # TODO: allow for cross-compiling the test projects and install i386 packages for build dependencies, then remove $ARCH check
  - if [ "$ARCH" == "x86_64" ]; then bash -xe travis/test.sh linuxdeploy-plugin-qt-"$ARCH".AppImage; fi

after_success:
  - ls -lh
  # make sure only pushes to rewrite create a new release, otherwise pretend PR and upload to transfer.sh
  - if [ "$TRAVIS_TAG" != "$TRAVIS_BRANCH" ] && [ "$TRAVIS_BRANCH" != "master" ]; then export TRAVIS_EVENT_TYPE=pull_request; fi
  - wget -c https://github.com/probonopd/uploadtool/raw/master/upload.sh
  - bash upload.sh linuxdeploy*.AppImage*

branches:
  except:
    - # Do not build tags that we create when we upload to GitHub Releases
    - /^(?i:continuous)$/
